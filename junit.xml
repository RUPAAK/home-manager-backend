<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="66" failures="0" errors="0" time="18.161">
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:07" time="13.022" tests="8">
    <testcase classname=" should not throw 404 while calling signin endpoint" name=" should not throw 404 while calling signin endpoint" time="0.118">
    </testcase>
    <testcase classname=" should throw 401 error if token isnot provided" name=" should throw 401 error if token isnot provided" time="0.026">
    </testcase>
    <testcase classname=" should throw 401 error if token is invalid" name=" should throw 401 error if token is invalid" time="0.013">
    </testcase>
    <testcase classname=" should throw 400 error if name isnot provided" name=" should throw 400 error if name isnot provided" time="0.267">
    </testcase>
    <testcase classname=" should throw 400 error if amount isnot provided" name=" should throw 400 error if amount isnot provided" time="0.29">
    </testcase>
    <testcase classname=" should throw 400 error if date is absent" name=" should throw 400 error if date is absent" time="0.194">
    </testcase>
    <testcase classname=" shouldthrow 201 if data created successfull" name=" shouldthrow 201 if data created successfull" time="0.133">
    </testcase>
    <testcase classname=" should throw 201 and should have data if data created successfull" name=" should throw 201 and should have data if data created successfull" time="0.163">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:07" time="13.982" tests="8">
    <testcase classname=" should not throw 404 while calling create endpoint" name=" should not throw 404 while calling create endpoint" time="0.119">
    </testcase>
    <testcase classname=" should throw 401 error if token isnot provided" name=" should throw 401 error if token isnot provided" time="0.032">
    </testcase>
    <testcase classname=" should throw 401 error if token is invalid" name=" should throw 401 error if token is invalid" time="0.015">
    </testcase>
    <testcase classname=" should throw 400 error if name isnot provided" name=" should throw 400 error if name isnot provided" time="0.267">
    </testcase>
    <testcase classname=" should throw 400 error if amount isnot provided" name=" should throw 400 error if amount isnot provided" time="0.149">
    </testcase>
    <testcase classname=" should throw 400 error if date is absent" name=" should throw 400 error if date is absent" time="0.193">
    </testcase>
    <testcase classname=" shouldthrow 201 if data created successfull" name=" shouldthrow 201 if data created successfull" time="0.175">
    </testcase>
    <testcase classname=" should throw 201 and should have data if data created successfull" name=" should throw 201 and should have data if data created successfull" time="0.144">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:07" time="14.71" tests="11">
    <testcase classname=" should not throw 404 while calling create endpoint" name=" should not throw 404 while calling create endpoint" time="0.113">
    </testcase>
    <testcase classname=" should throw 401 error if token isnot provided" name=" should throw 401 error if token isnot provided" time="0.054">
    </testcase>
    <testcase classname=" should throw 401 error if token is invalid" name=" should throw 401 error if token is invalid" time="0.041">
    </testcase>
    <testcase classname=" should throw 400 error if name isnot provided" name=" should throw 400 error if name isnot provided" time="0.365">
    </testcase>
    <testcase classname=" should throw 400 error if amount isnot provided" name=" should throw 400 error if amount isnot provided" time="0.179">
    </testcase>
    <testcase classname=" should throw 400 error if date isnot provided" name=" should throw 400 error if date isnot provided" time="0.179">
    </testcase>
    <testcase classname=" should throw 400 error if bankid isnot provided" name=" should throw 400 error if bankid isnot provided" time="0.152">
    </testcase>
    <testcase classname=" should throw 400 error if bank isnot found" name=" should throw 400 error if bank isnot found" time="0.204">
    </testcase>
    <testcase classname=" should throw if bank amount is less than transistion" name=" should throw if bank amount is less than transistion" time="0.147">
    </testcase>
    <testcase classname=" should deduct amount from bank after sucessful transistion creation" name=" should deduct amount from bank after sucessful transistion creation" time="0.17">
    </testcase>
    <testcase classname=" should sucessfully create transistion  " name=" should sucessfully create transistion  " time="0.175">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:20" time="1.95" tests="4">
    <testcase classname=" should not throw 404 while calling create endpoint" name=" should not throw 404 while calling create endpoint" time="0.046">
    </testcase>
    <testcase classname=" should throw 401 if token not given" name=" should throw 401 if token not given" time="0.043">
    </testcase>
    <testcase classname=" should throw 400 if transistion is not found" name=" should throw 400 if transistion is not found" time="0.149">
    </testcase>
    <testcase classname=" should throw 200 and successfully delete transistion" name=" should throw 200 and successfully delete transistion" time="0.183">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:21" time="1.941" tests="8">
    <testcase classname=" should not throw 404 while calling signin endpoint" name=" should not throw 404 while calling signin endpoint" time="0.055">
    </testcase>
    <testcase classname=" should throw 400 when email is missing" name=" should throw 400 when email is missing" time="0.016">
    </testcase>
    <testcase classname=" should throw 400 when password is missing" name=" should throw 400 when password is missing" time="0.021">
    </testcase>
    <testcase classname=" should throw 400 when email and password are missing" name=" should throw 400 when email and password are missing" time="0.013">
    </testcase>
    <testcase classname=" should throw 400 when when when is not register" name=" should throw 400 when when when is not register" time="0.019">
    </testcase>
    <testcase classname=" fails when an incorrect password is supplied" name=" fails when an incorrect password is supplied" time="0.247">
    </testcase>
    <testcase classname=" responds with a access token when given valid credentials" name=" responds with a access token when given valid credentials" time="0.238">
    </testcase>
    <testcase classname=" should have lastLogged in field when new user login" name=" should have lastLogged in field when new user login" time="0.206">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:22" time="1.209" tests="4">
    <testcase classname=" should not throw 404 while calling get endpoint" name=" should not throw 404 while calling get endpoint" time="0.038">
    </testcase>
    <testcase classname=" should throw 401 if token not given" name=" should throw 401 if token not given" time="0.033">
    </testcase>
    <testcase classname=" should throw 400 if expense not found" name=" should throw 400 if expense not found" time="0.18">
    </testcase>
    <testcase classname=" should throw 200 and successfully update expense" name=" should throw 200 and successfully update expense" time="0.141">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:22" time="1.26" tests="8">
    <testcase classname=" should not throw 404 when hitting signup endpoint" name=" should not throw 404 when hitting signup endpoint" time="0.035">
    </testcase>
    <testcase classname=" should throw 400 status when name is empty" name=" should throw 400 status when name is empty" time="0.02">
    </testcase>
    <testcase classname=" should throw 400 status when email is empty" name=" should throw 400 status when email is empty" time="0.01">
    </testcase>
    <testcase classname=" should throw 400 status when email is invalid" name=" should throw 400 status when email is invalid" time="0.011">
    </testcase>
    <testcase classname=" should throw 400 status when password is empty" name=" should throw 400 status when password is empty" time="0.012">
    </testcase>
    <testcase classname=" should throw 400 status when email is already taken" name=" should throw 400 status when email is already taken" time="0.141">
    </testcase>
    <testcase classname=" password should be hashed when signup" name=" password should be hashed when signup" time="0.138">
    </testcase>
    <testcase classname=" should throw 201 status when  user created succesfully" name=" should throw 201 status when  user created succesfully" time="0.098">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:23" time="1.037" tests="3">
    <testcase classname=" should not throw 404 while calling get endpoint" name=" should not throw 404 while calling get endpoint" time="0.02">
    </testcase>
    <testcase classname=" should not throw 401 not authorized if token invalid" name=" should not throw 401 not authorized if token invalid" time="0.021">
    </testcase>
    <testcase classname=" should throw data while calling get endpoint" name=" should throw data while calling get endpoint" time="0.171">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:23" time="1.126" tests="4">
    <testcase classname=" should not throw 404 while calling create endpoint" name=" should not throw 404 while calling create endpoint" time="0.051">
    </testcase>
    <testcase classname=" should throw 401 if token not given" name=" should throw 401 if token not given" time="0.018">
    </testcase>
    <testcase classname=" should throw 400 if expense is not found" name=" should throw 400 if expense is not found" time="0.14">
    </testcase>
    <testcase classname=" should throw 200 and successfully delete expense" name=" should throw 200 and successfully delete expense" time="0.173">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:23" time="1.061" tests="4">
    <testcase classname=" should not throw 404 while calling get endpoint" name=" should not throw 404 while calling get endpoint" time="0.021">
    </testcase>
    <testcase classname=" should throw 401 not authorized if token invalid" name=" should throw 401 not authorized if token invalid" time="0.016">
    </testcase>
    <testcase classname=" should throw data while calling get endpoint" name=" should throw data while calling get endpoint" time="0.123">
    </testcase>
    <testcase classname=" should throw data only of the user" name=" should throw data only of the user" time="0.104">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2021-10-20T17:06:24" time="0.764" tests="4">
    <testcase classname=" should not throw 404 while calling signin endpoint" name=" should not throw 404 while calling signin endpoint" time="0.046">
    </testcase>
    <testcase classname=" should throw 401 error if token isnot provided" name=" should throw 401 error if token isnot provided" time="0.026">
    </testcase>
    <testcase classname=" should throw 401 error if token is invalid" name=" should throw 401 error if token is invalid" time="0.012">
    </testcase>
    <testcase classname=" should throw 200 and data must be defined" name=" should throw 200 and data must be defined" time="0.099">
    </testcase>
  </testsuite>
</testsuites>